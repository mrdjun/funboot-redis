<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fun.project.admin.system.mapper.ConfigMapper">

    <resultMap id="ConfigResult"        type="Config"           >
        <result column="config_id"      property="configId"     />
        <result column="config_name"    property="configName"   />
        <result column="config_key"     property="configKey"    />
        <result column="config_value"   property="configValue"  />
        <result column="config_type"    property="configType"   />
        <result column="create_by"      property="createBy"     />
        <result column="create_time"    property="createTime"   />
        <result column="update_by"      property="updateBy"     />
        <result column="update_time"    property="updateTime"   />
        <result column="remark"         property="remark"       />
    </resultMap>

    <sql id="ConfigResultVo">
        select config_id,config_name,config_key,config_value,config_type,create_by,create_time,update_by,update_time,remark from sys_config
    </sql>

    <sql id="sqlwhereSearch">
        <where>
            <if test="configId !=null">
                and config_id = #{configId}
            </if>
            <if test="configKey !=null and configKey != ''">
                and config_key = #{configKey}
            </if>
        </where>
    </sql>

    <select id="selectConfigById" parameterType="Long" resultMap="ConfigResult">
        <include refid="ConfigResultVo"/>
        WHERE config_id = #{configId}
    </select>

    <select id="selectConfigList" parameterType="Config" resultMap="ConfigResult">
        <include refid="ConfigResultVo"/>
        <where>
            <if test="configName != null and configName != ''">
                AND config_name like concat('%', #{configName}, '%')
            </if>
            <if test="configType != null and configType != ''">
                AND config_type = #{configType}
            </if>
            <if test="configKey != null and configKey != ''">
                AND config_key like concat('%', #{configKey}, '%')
            </if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                and create_time &gt;= UNIX_TIMESTAMP(#{params.beginTime})*1000
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                and create_time &lt;= UNIX_TIMESTAMP(#{params.endTime})*1000
            </if>
        </where>
    </select>

    <insert id="insertConfig" parameterType="Config" useGeneratedKeys="true">
        INSERT INTO sys_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="configId != null  and configId != ''">config_id,</if>
            <if test="configName != null  and configName != ''">config_name,</if>
            <if test="configKey != null  and configKey != ''">config_key,</if>
            <if test="configValue != null  and configValue != ''">config_value,</if>
            <if test="configType != null  and configType != ''">config_type,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null  and createTime != 0">create_time,</if>
            <if test="remark != null  and remark != ''">remark</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="configId != null  and configId != ''">#{configId},</if>
            <if test="configName != null  and configName != ''">#{configName},</if>
            <if test="configKey != null  and configKey != ''">#{configKey},</if>
            <if test="configValue != null  and configValue != ''">#{configValue},</if>
            <if test="configType != null  and configType != ''">#{configType},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null  and createTime != 0">#{createTime},</if>
            <if test="remark != null  and remark != ''">#{remark}</if>
        </trim>
    </insert>

    <update id="updateConfig" parameterType="Config">
        UPDATE sys_config
        <trim prefix="SET" suffixOverrides=",">
            <if test="configId != null  and configId != ''">config_id = #{configId},</if>
            <if test="configName != null  and configName != ''">config_name = #{configName},</if>
            <if test="configKey != null  and configKey != ''">config_key = #{configKey},</if>
            <if test="configValue != null  and configValue != ''">config_value = #{configValue},</if>
            <if test="configType != null  and configType != ''">config_type = #{configType},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null  and createTime != ''">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null  and updateTime != ''">update_time = #{updateTime},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
        </trim>
        WHERE config_id = #{configId}
    </update>

    <delete id="deleteConfigById" parameterType="Long">
        DELETE FROM sys_config
        WHERE  config_id = #{configId}
    </delete>

    <delete id="deleteConfigByIds" parameterType="String">
        delete from sys_config where config_id in
        <foreach item="item" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="checkConfigKeyUnique" parameterType="String" resultMap="ConfigResult">
        <include refid="ConfigResultVo"/>
        where config_key = #{configKey}
    </select>

    <select id="selectConfig" parameterType="Config" resultMap="ConfigResult">
        <include refid="ConfigResultVo"/>
        <include refid="sqlwhereSearch"/>
    </select>

</mapper>
